"""Quiz factory unit tests."""

from toisto.model.language import EN, FI, NL
from toisto.model.quiz.quiz_factory import create_quizzes
from toisto.model.quiz.quiz_type import (
    DICTATE,
    FIRST_PERSON,
    INFINITIVE,
    INTERPRET,
    PAST_PERFECT_TENSE,
    PAST_TENSE,
    PLURAL,
    PRESENT_PERFECT_TENSE,
    PRESENT_TENSE,
    READ,
    SECOND_PERSON,
    SINGULAR,
    THIRD_PERSON,
    WRITE,
)

from .....base import NL_EN, NL_FI
from .quiz_factory_test_case import OLLA_PRESENT_TENSE, ZIJN_PRESENT_TENSE, QuizFactoryTestCase


class TenseQuizzesTest(QuizFactoryTestCase):
    """Unit tests for concepts with tenses."""

    def test_present_and_past_tense_nested_with_grammatical_person(self):
        """Test that quizzes can be generated for present and past tense nested with grammatical person."""
        concept = self.create_verb_with_tense_and_person()
        i_eat, we_eat, i_ate, we_ate = concept.labels(EN)
        ik_eet, wij_eten, ik_at, wij_aten = concept.labels(NL)
        self.assertSetEqual(
            {
                self.create_quiz(concept, ik_eet, [i_eat], READ),
                self.create_quiz(concept, ik_eet, [ik_eet], DICTATE),
                self.create_quiz(concept, ik_eet, [i_eat], INTERPRET),
                self.create_quiz(concept, i_eat, [ik_eet], WRITE),
                self.create_quiz(concept, wij_eten, [we_eat], READ),
                self.create_quiz(concept, wij_eten, [wij_eten], DICTATE),
                self.create_quiz(concept, wij_eten, [we_eat], INTERPRET),
                self.create_quiz(concept, we_eat, [wij_eten], WRITE),
                self.create_quiz(concept, ik_eet, [wij_eten], PLURAL),
                self.create_quiz(concept, wij_eten, [ik_eet], SINGULAR),
                self.create_quiz(concept, ik_at, [i_ate], READ),
                self.create_quiz(concept, ik_at, [ik_at], DICTATE),
                self.create_quiz(concept, ik_at, [i_ate], INTERPRET),
                self.create_quiz(concept, i_ate, [ik_at], WRITE),
                self.create_quiz(concept, wij_aten, [we_ate], READ),
                self.create_quiz(concept, wij_aten, [wij_aten], DICTATE),
                self.create_quiz(concept, wij_aten, [we_ate], INTERPRET),
                self.create_quiz(concept, we_ate, [wij_aten], WRITE),
                self.create_quiz(concept, ik_at, [wij_aten], PLURAL),
                self.create_quiz(concept, wij_aten, [ik_at], SINGULAR),
                self.create_quiz(concept, ik_eet, [ik_at], PAST_TENSE),
                self.create_quiz(concept, wij_eten, [wij_aten], PAST_TENSE),
                self.create_quiz(concept, ik_at, [ik_eet], PRESENT_TENSE),
                self.create_quiz(concept, wij_aten, [wij_eten], PRESENT_TENSE),
            },
            create_quizzes(NL_EN, (), concept),
        )

    def test_all_tenses_nested_with_grammatical_person(self):
        """Test that quizzes can be generated for all tenses nested with grammatical person."""
        concept = self.create_verb_with_tense_and_person(include_perfect_tense=True)
        ik_eet, wij_eten, ik_at, wij_aten, ik_heb_gegeten, wij_hebben_gegeten, ik_had_gegeten, wij_hadden_gegeten = (
            concept.labels(NL)
        )
        i_eat, we_eat, i_ate, we_ate, i_have_eaten, we_have_eaten, i_had_eaten, we_had_eaten = concept.labels(EN)
        self.assertSetEqual(
            {
                self.create_quiz(concept, ik_eet, [i_eat], READ),
                self.create_quiz(concept, ik_eet, [ik_eet], DICTATE),
                self.create_quiz(concept, ik_eet, [i_eat], INTERPRET),
                self.create_quiz(concept, i_eat, [ik_eet], WRITE),
                self.create_quiz(concept, wij_eten, [we_eat], READ),
                self.create_quiz(concept, wij_eten, [wij_eten], DICTATE),
                self.create_quiz(concept, wij_eten, [we_eat], INTERPRET),
                self.create_quiz(concept, we_eat, [wij_eten], WRITE),
                self.create_quiz(concept, ik_eet, [wij_eten], PLURAL),
                self.create_quiz(concept, wij_eten, [ik_eet], SINGULAR),
                self.create_quiz(concept, ik_at, [i_ate], READ),
                self.create_quiz(concept, ik_at, [ik_at], DICTATE),
                self.create_quiz(concept, ik_at, [i_ate], INTERPRET),
                self.create_quiz(concept, i_ate, [ik_at], WRITE),
                self.create_quiz(concept, wij_aten, [we_ate], READ),
                self.create_quiz(concept, wij_aten, [wij_aten], DICTATE),
                self.create_quiz(concept, wij_aten, [we_ate], INTERPRET),
                self.create_quiz(concept, we_ate, [wij_aten], WRITE),
                self.create_quiz(concept, ik_at, [wij_aten], PLURAL),
                self.create_quiz(concept, wij_aten, [ik_at], SINGULAR),
                self.create_quiz(concept, ik_heb_gegeten, [i_have_eaten], READ),
                self.create_quiz(concept, ik_heb_gegeten, [ik_heb_gegeten], DICTATE),
                self.create_quiz(concept, ik_heb_gegeten, [i_have_eaten], INTERPRET),
                self.create_quiz(concept, i_have_eaten, [ik_heb_gegeten], WRITE),
                self.create_quiz(concept, wij_hebben_gegeten, [we_have_eaten], READ),
                self.create_quiz(concept, wij_hebben_gegeten, [wij_hebben_gegeten], DICTATE),
                self.create_quiz(concept, wij_hebben_gegeten, [we_have_eaten], INTERPRET),
                self.create_quiz(concept, we_have_eaten, [wij_hebben_gegeten], WRITE),
                self.create_quiz(concept, ik_heb_gegeten, [wij_hebben_gegeten], PLURAL),
                self.create_quiz(concept, wij_hebben_gegeten, [ik_heb_gegeten], SINGULAR),
                self.create_quiz(concept, ik_had_gegeten, [i_had_eaten], READ),
                self.create_quiz(concept, ik_had_gegeten, [ik_had_gegeten], DICTATE),
                self.create_quiz(concept, ik_had_gegeten, [i_had_eaten], INTERPRET),
                self.create_quiz(concept, i_had_eaten, [ik_had_gegeten], WRITE),
                self.create_quiz(concept, wij_hadden_gegeten, [we_had_eaten], READ),
                self.create_quiz(concept, wij_hadden_gegeten, [wij_hadden_gegeten], DICTATE),
                self.create_quiz(concept, wij_hadden_gegeten, [we_had_eaten], INTERPRET),
                self.create_quiz(concept, we_had_eaten, [wij_hadden_gegeten], WRITE),
                self.create_quiz(concept, ik_had_gegeten, [wij_hadden_gegeten], PLURAL),
                self.create_quiz(concept, wij_hadden_gegeten, [ik_had_gegeten], SINGULAR),
                self.create_quiz(concept, ik_eet, [ik_at], PAST_TENSE),
                self.create_quiz(concept, ik_eet, [ik_heb_gegeten], PRESENT_PERFECT_TENSE),
                self.create_quiz(concept, ik_eet, [ik_had_gegeten], PAST_PERFECT_TENSE),
                self.create_quiz(concept, wij_eten, [wij_aten], PAST_TENSE),
                self.create_quiz(concept, wij_eten, [wij_hebben_gegeten], PRESENT_PERFECT_TENSE),
                self.create_quiz(concept, wij_eten, [wij_hadden_gegeten], PAST_PERFECT_TENSE),
                self.create_quiz(concept, ik_at, [ik_eet], PRESENT_TENSE),
                self.create_quiz(concept, ik_at, [ik_heb_gegeten], PRESENT_PERFECT_TENSE),
                self.create_quiz(concept, ik_at, [ik_had_gegeten], PAST_PERFECT_TENSE),
                self.create_quiz(concept, wij_aten, [wij_eten], PRESENT_TENSE),
                self.create_quiz(concept, wij_aten, [wij_hebben_gegeten], PRESENT_PERFECT_TENSE),
                self.create_quiz(concept, wij_aten, [wij_hadden_gegeten], PAST_PERFECT_TENSE),
                self.create_quiz(concept, ik_heb_gegeten, [ik_eet], PRESENT_TENSE),
                self.create_quiz(concept, ik_heb_gegeten, [ik_had_gegeten], PAST_PERFECT_TENSE),
                self.create_quiz(concept, ik_heb_gegeten, [ik_at], PAST_TENSE),
                self.create_quiz(concept, wij_hebben_gegeten, [wij_eten], PRESENT_TENSE),
                self.create_quiz(concept, wij_hebben_gegeten, [wij_aten], PAST_TENSE),
                self.create_quiz(concept, wij_hebben_gegeten, [wij_hadden_gegeten], PAST_PERFECT_TENSE),
                self.create_quiz(concept, ik_had_gegeten, [ik_eet], PRESENT_TENSE),
                self.create_quiz(concept, ik_had_gegeten, [ik_at], PAST_TENSE),
                self.create_quiz(concept, ik_had_gegeten, [ik_heb_gegeten], PRESENT_PERFECT_TENSE),
                self.create_quiz(concept, wij_hadden_gegeten, [wij_eten], PRESENT_TENSE),
                self.create_quiz(concept, wij_hadden_gegeten, [wij_aten], PAST_TENSE),
                self.create_quiz(concept, wij_hadden_gegeten, [wij_hebben_gegeten], PRESENT_PERFECT_TENSE),
            },
            create_quizzes(NL_EN, (), concept),
        )

    def test_tense_nested_with_grammatical_person_and_infinitive(self):
        """Test that quizzes can be generated for tense nested with grammatical person and infinitive."""
        concept = self.create_concept(
            "to eat",
            labels=[
                {
                    "label": {
                        "infinitive": "to eat",
                        "present tense": {"singular": "I eat", "plural": "we eat"},
                        "past tense": {"singular": "I ate", "plural": "we ate"},
                    },
                    "language": EN,
                },
                {
                    "label": {
                        "infinitive": "eten",
                        "present tense": {"singular": "ik eet", "plural": "wij eten"},
                        "past tense": {"singular": "ik at", "plural": "wij aten"},
                    },
                    "language": NL,
                },
            ],
        )
        eten, ik_eet, wij_eten, ik_at, wij_aten = concept.labels(NL)
        to_eat, i_eat, we_eat, i_ate, we_ate = concept.labels(EN)
        self.assertSetEqual(
            {
                self.create_quiz(concept, ik_eet, [i_eat], READ),
                self.create_quiz(concept, ik_eet, [ik_eet], DICTATE),
                self.create_quiz(concept, ik_eet, [i_eat], INTERPRET),
                self.create_quiz(concept, i_eat, [ik_eet], WRITE),
                self.create_quiz(concept, wij_eten, [we_eat], READ),
                self.create_quiz(concept, wij_eten, [wij_eten], DICTATE),
                self.create_quiz(concept, wij_eten, [we_eat], INTERPRET),
                self.create_quiz(concept, we_eat, [wij_eten], WRITE),
                self.create_quiz(concept, ik_eet, [wij_eten], PLURAL),
                self.create_quiz(concept, wij_eten, [ik_eet], SINGULAR),
                self.create_quiz(concept, ik_at, [i_ate], READ),
                self.create_quiz(concept, ik_at, [ik_at], DICTATE),
                self.create_quiz(concept, ik_at, [i_ate], INTERPRET),
                self.create_quiz(concept, i_ate, [ik_at], WRITE),
                self.create_quiz(concept, wij_aten, [we_ate], READ),
                self.create_quiz(concept, wij_aten, [wij_aten], DICTATE),
                self.create_quiz(concept, wij_aten, [we_ate], INTERPRET),
                self.create_quiz(concept, we_ate, [wij_aten], WRITE),
                self.create_quiz(concept, ik_at, [wij_aten], PLURAL),
                self.create_quiz(concept, wij_aten, [ik_at], SINGULAR),
                self.create_quiz(concept, ik_eet, [ik_at], PAST_TENSE),
                self.create_quiz(concept, wij_eten, [wij_aten], PAST_TENSE),
                self.create_quiz(concept, ik_at, [ik_eet], PRESENT_TENSE),
                self.create_quiz(concept, wij_aten, [wij_eten], PRESENT_TENSE),
                self.create_quiz(concept, eten, [to_eat], READ),
                self.create_quiz(concept, eten, [eten], DICTATE),
                self.create_quiz(concept, eten, [to_eat], INTERPRET),
                self.create_quiz(concept, to_eat, [eten], WRITE),
                self.create_quiz(concept, ik_eet, [eten], INFINITIVE),
                self.create_quiz(concept, wij_eten, [eten], INFINITIVE),
                self.create_quiz(concept, ik_at, [eten], INFINITIVE),
                self.create_quiz(concept, wij_aten, [eten], INFINITIVE),
            },
            create_quizzes(NL_EN, (), concept),
        )

    def test_tense_nested_with_grammatical_number_nested_and_grammatical_person(self):
        """Test generating quizzes for tense, grammatical number, and grammatical person."""
        concept = self.create_concept(
            "to be",
            labels=[
                {
                    "label": {
                        "present tense": OLLA_PRESENT_TENSE,
                        "past tense": {
                            "singular": {
                                "first person": "minä olin",
                                "second person": "sinä olit",
                                "third person": "hän oli",
                            },
                            "plural": {
                                "first person": "me olimme",
                                "second person": "te olitte",
                                "third person": "he olivat",
                            },
                        },
                    },
                    "language": FI,
                },
                {
                    "label": {
                        "present tense": ZIJN_PRESENT_TENSE,
                        "past tense": {
                            "singular": {
                                "first person": "ik was",
                                "second person": "jij was",
                                "third person": "zij was",
                            },
                            "plural": {
                                "first person": "wij waren",
                                "second person": "jullie waren",
                                "third person": "zij waren",
                            },
                        },
                    },
                    "language": NL,
                },
            ],
        )
        (
            ik_ben,
            jij_bent,
            zij_is,
            wij_zijn,
            jullie_zijn,
            zij_zijn,
            ik_was,
            jij_was,
            zij_was,
            wij_waren,
            jullie_waren,
            zij_waren,
        ) = concept.labels(NL)
        (
            minä_olen,
            sinä_olet,
            hän_on,
            me_olemme,
            te_olette,
            he_ovat,
            minä_olin,
            sinä_olit,
            hän_oli,
            me_olimme,
            te_olitte,
            he_olivat,
        ) = concept.labels(FI)
        self.assertSetEqual(
            {
                self.create_quiz(concept, ik_ben, [minä_olen], READ),
                self.create_quiz(concept, ik_ben, [ik_ben], DICTATE),
                self.create_quiz(concept, ik_ben, [minä_olen], INTERPRET),
                self.create_quiz(concept, minä_olen, [ik_ben], WRITE),
                self.create_quiz(concept, jij_bent, [sinä_olet], READ),
                self.create_quiz(concept, jij_bent, [jij_bent], DICTATE),
                self.create_quiz(concept, jij_bent, [sinä_olet], INTERPRET),
                self.create_quiz(concept, sinä_olet, [jij_bent], WRITE),
                self.create_quiz(concept, zij_is, [hän_on], READ),
                self.create_quiz(concept, zij_is, [zij_is], DICTATE),
                self.create_quiz(concept, zij_is, [hän_on], INTERPRET),
                self.create_quiz(concept, hän_on, [zij_is], WRITE),
                self.create_quiz(concept, ik_ben, [jij_bent], SECOND_PERSON),
                self.create_quiz(concept, ik_ben, [zij_is], THIRD_PERSON),
                self.create_quiz(concept, jij_bent, [ik_ben], FIRST_PERSON),
                self.create_quiz(concept, jij_bent, [zij_is], THIRD_PERSON),
                self.create_quiz(concept, zij_is, [ik_ben], FIRST_PERSON),
                self.create_quiz(concept, zij_is, [jij_bent], SECOND_PERSON),
                self.create_quiz(concept, wij_zijn, [me_olemme], READ),
                self.create_quiz(concept, wij_zijn, [wij_zijn], DICTATE),
                self.create_quiz(concept, wij_zijn, [me_olemme], INTERPRET),
                self.create_quiz(concept, me_olemme, [wij_zijn], WRITE),
                self.create_quiz(concept, jullie_zijn, [te_olette], READ),
                self.create_quiz(concept, jullie_zijn, [jullie_zijn], DICTATE),
                self.create_quiz(concept, jullie_zijn, [te_olette], INTERPRET),
                self.create_quiz(concept, te_olette, [jullie_zijn], WRITE),
                self.create_quiz(concept, zij_zijn, [he_ovat], READ),
                self.create_quiz(concept, zij_zijn, [zij_zijn], DICTATE),
                self.create_quiz(concept, zij_zijn, [he_ovat], INTERPRET),
                self.create_quiz(concept, he_ovat, [zij_zijn], WRITE),
                self.create_quiz(concept, wij_zijn, [jullie_zijn], SECOND_PERSON),
                self.create_quiz(concept, wij_zijn, [zij_zijn], THIRD_PERSON),
                self.create_quiz(concept, jullie_zijn, [wij_zijn], FIRST_PERSON),
                self.create_quiz(concept, jullie_zijn, [zij_zijn], THIRD_PERSON),
                self.create_quiz(concept, zij_zijn, [wij_zijn], FIRST_PERSON),
                self.create_quiz(concept, zij_zijn, [jullie_zijn], SECOND_PERSON),
                self.create_quiz(concept, ik_ben, [wij_zijn], PLURAL),
                self.create_quiz(concept, jij_bent, [jullie_zijn], PLURAL),
                self.create_quiz(concept, zij_is, [zij_zijn], PLURAL),
                self.create_quiz(concept, wij_zijn, [ik_ben], SINGULAR),
                self.create_quiz(concept, jullie_zijn, [jij_bent], SINGULAR),
                self.create_quiz(concept, zij_zijn, [zij_is], SINGULAR),
                self.create_quiz(concept, ik_was, [minä_olin], READ),
                self.create_quiz(concept, ik_was, [ik_was], DICTATE),
                self.create_quiz(concept, ik_was, [minä_olin], INTERPRET),
                self.create_quiz(concept, minä_olin, [ik_was], WRITE),
                self.create_quiz(concept, jij_was, [sinä_olit], READ),
                self.create_quiz(concept, jij_was, [jij_was], DICTATE),
                self.create_quiz(concept, jij_was, [sinä_olit], INTERPRET),
                self.create_quiz(concept, sinä_olit, [jij_was], WRITE),
                self.create_quiz(concept, zij_was, [hän_oli], READ),
                self.create_quiz(concept, zij_was, [zij_was], DICTATE),
                self.create_quiz(concept, zij_was, [hän_oli], INTERPRET),
                self.create_quiz(concept, hän_oli, [zij_was], WRITE),
                self.create_quiz(concept, ik_was, [jij_was], SECOND_PERSON),
                self.create_quiz(concept, ik_was, [zij_was], THIRD_PERSON),
                self.create_quiz(concept, jij_was, [ik_was], FIRST_PERSON),
                self.create_quiz(concept, jij_was, [zij_was], THIRD_PERSON),
                self.create_quiz(concept, zij_was, [ik_was], FIRST_PERSON),
                self.create_quiz(concept, zij_was, [jij_was], SECOND_PERSON),
                self.create_quiz(concept, wij_waren, [me_olimme], READ),
                self.create_quiz(concept, wij_waren, [wij_waren], DICTATE),
                self.create_quiz(concept, wij_waren, [me_olimme], INTERPRET),
                self.create_quiz(concept, me_olimme, [wij_waren], WRITE),
                self.create_quiz(concept, jullie_waren, [te_olitte], READ),
                self.create_quiz(concept, jullie_waren, [jullie_waren], DICTATE),
                self.create_quiz(concept, jullie_waren, [te_olitte], INTERPRET),
                self.create_quiz(concept, te_olitte, [jullie_waren], WRITE),
                self.create_quiz(concept, zij_waren, [he_olivat], READ),
                self.create_quiz(concept, zij_waren, [zij_waren], DICTATE),
                self.create_quiz(concept, zij_waren, [he_olivat], INTERPRET),
                self.create_quiz(concept, he_olivat, [zij_waren], WRITE),
                self.create_quiz(concept, wij_waren, [jullie_waren], SECOND_PERSON),
                self.create_quiz(concept, wij_waren, [zij_waren], THIRD_PERSON),
                self.create_quiz(concept, jullie_waren, [wij_waren], FIRST_PERSON),
                self.create_quiz(concept, jullie_waren, [zij_waren], THIRD_PERSON),
                self.create_quiz(concept, zij_waren, [wij_waren], FIRST_PERSON),
                self.create_quiz(concept, zij_waren, [jullie_waren], SECOND_PERSON),
                self.create_quiz(concept, ik_was, [wij_waren], PLURAL),
                self.create_quiz(concept, jij_was, [jullie_waren], PLURAL),
                self.create_quiz(concept, zij_was, [zij_waren], PLURAL),
                self.create_quiz(concept, wij_waren, [ik_was], SINGULAR),
                self.create_quiz(concept, jullie_waren, [jij_was], SINGULAR),
                self.create_quiz(concept, zij_waren, [zij_was], SINGULAR),
                self.create_quiz(concept, ik_ben, [ik_was], PAST_TENSE),
                self.create_quiz(concept, jij_bent, [jij_was], PAST_TENSE),
                self.create_quiz(concept, zij_is, [zij_was], PAST_TENSE),
                self.create_quiz(concept, wij_zijn, [wij_waren], PAST_TENSE),
                self.create_quiz(concept, jullie_zijn, [jullie_waren], PAST_TENSE),
                self.create_quiz(concept, zij_zijn, [zij_waren], PAST_TENSE),
                self.create_quiz(concept, ik_was, [ik_ben], PRESENT_TENSE),
                self.create_quiz(concept, jij_was, [jij_bent], PRESENT_TENSE),
                self.create_quiz(concept, zij_was, [zij_is], PRESENT_TENSE),
                self.create_quiz(concept, wij_waren, [wij_zijn], PRESENT_TENSE),
                self.create_quiz(concept, jullie_waren, [jullie_zijn], PRESENT_TENSE),
                self.create_quiz(concept, zij_waren, [zij_zijn], PRESENT_TENSE),
            },
            create_quizzes(NL_FI, (), concept),
        )
